---
title: Reading Week 1
tags: reading
---

####gSchool Reading Assignment: _The Passionate Programmer_ by Chad Fowler

Each week during gSchool, we'll have a reading assignment. I think this is a great way to add some different perspectives and extra knowledge to the program. It's also nice to have a change of pace and a chance to step away from the computer for a bit.

This week we read the first three parts of Chad Fowler's _The Passionate Programmer: Creating a Remarkable Career in Software Development_. Each section is organized by theme into short, topic-specific chapters called "Tips," which was a nice layout for reading and digesting the information any time I had a few minutes free. The over-arching message I took away from this week's reading was: Be proactive about your career path. While this sounds like an obvious piece of advice, how many people actively follow it? I am sure my classmates (myself included) would argue that we're being proactive by being in gSchool.

In Part III, Tip 27 ("Learn to Love Maintenance") emphasizes the importance of systems/software maintenance, not only for the continued functioning of the product, but also as a way for the programmer to improve that product, interact with the client/consumer, and gain a more thorough knowledge of how the product fits into the business model and processes of the company / organization. Fowler discusses this point because, according to him, software developers want to create and often see maintenance as rather mundane and uninspiring. He also notes that companies also tend to see the maintenance process as uninteresting and worth as little investment as possible.

This section reminded me of similar problems in the world of archaeology (one of my past career paths). As an archaeologist, the process of digging new sites and starting new excavations is always viewed as the "sexy" part. Once all those cool artifacts have been found, analyzed, shown off, etc, comes a lot of drudgery. Report-writing is the bane of many an archaeologist's existence. While archaeologists these days have taken on more responsibility (peer-pressure? profession-wide guilt?) and now usually do get those reports written, there are museum shelves full of boxes of artifacts and paperwork from excavations done decades ago that were never properly summarized and reported. Why? Because those archaeologists were drawn to do more "sexy" excavations, make new discoveries, and fill more boxes with broken pottery and rusty nails (hey! archaeologists think pottery and nails are cool). "Maintenance" of those artifact boxes and paperwork often means replacing mildewy boxes and keeping the papers in a file cabinet.

As a student in college, I learned to enjoy the maintenance process of artifact collections by working with a professor and graduate students to "maintain" and explore a collection originating from sites excavated in the 1970s. It had been a fascinating group of excavations, but the findings had not been fully recorded and final reports never finished. Our task was to catalog and document the artifacts and make sure results were summarized in preparation for a major report writing. While spending my days in the basement lab washing musty artifacts with a toothbrush certainly wasn't exciting to tell my friends about, it gave me a more complete perspective on the full process. I found that it also improved my work when I was out in the field excavating. Because I'd been on the other end of interpreting bad handwriting and cryptic notes, I could make my documentation more meaningful and robust. Working to re-catalog and maintain the old collections also gave me an appreciation from what can be learned from information that's already there but not being utilized. While I was involved with the project, it provided fodder for numerous graduate and undergraduate theses.

Fowler's tip about making the best of maintenance situations was an interesting one that I will definitely remember in the future.

Check back in next week for my review of the second half of _The Passionate Programmer_. Until then, happy coding!
